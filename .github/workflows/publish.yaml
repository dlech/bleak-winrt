name: build
on: 
  push:
    tags:
      - v1.*

jobs:
  sdist:
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - run: python -m pip install build
      - run: python -m build --sdist
      - uses: actions/upload-artifact@v2
        with:
          name: sdist_${{ github.run_id }}
          path: dist/

  bdist:
    runs-on: windows-2019
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        architecture: ['x86', 'x64']
    name: Python ${{ matrix.python-version }} ${{ matrix.architecture }} bdist
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - run: python -m pip install build
      - name: Run python -m build --wheel
        run: |
          Import-Module "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\Common7\Tools\Microsoft.VisualStudio.DevShell.dll"
          Enter-VsDevShell -VsInstallPath "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise" -DevCmdArguments '-arch=${{ matrix.architecture }}'
          python -m build --wheel
      - uses: actions/upload-artifact@v2
        with:
          name: bdist_${{ matrix.python-version }}_${{ matrix.architecture }}_${{ github.run_id }}
          path: dist/

  publish:
    needs: [sdist, bdist]
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/download-artifact@v2
        with:
          path: artifacts
      - run: |
          mkdir -p dist
          mv artifacts/{b,s}dist_*/* dist/
      - uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
